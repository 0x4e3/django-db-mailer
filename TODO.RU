Version: 2.2
------------
* [-] Выбор типа сообщения в сигналах. Может быть: почта, смс, tts, push
* [-] В логах писать какое приложение из внешнего апи создало запрос
* [-] Пофиксить для push уведомлений и смс - bcc, который будет уходить на почту. Так же подумать про cc.
* [-] Тесты + coverage
* [-] Расширить логи. Добавить поле От, добавить текущий язык, добавить: затраченное время на отправку, IP, и поле с request.META. Если передали request в функцию, то записываем значения.
* [-] send_db_many (background task)


Version: 2.3
------------
* [-] Отделить таски от Celery
* [-] Поддержка uWSGI Spooler
* [-] Поддержка django-rq
* [-] Добавить приоритеты на уровне воркеров (воркеры с именами: Low, High, Medium).  Далее роутить сообщение в нужный воркер
* [-] Поправить документацию с учетом 3 пунктов выше


Version: 2.4
------------
* [-] Web-сокеты для нотификаций в браузере (Tornado) + JS фильтры
* [-] Показывать статистику отправленных и отображать в админке рядом с шаблоном
* [-] Возможность отправки POST файлов в API


Version: 2.5
------------
* [-] Модели должны обязательно иметь префикс Mail
* [-] Полная стабилизация кодовой базы


Version: 3.0
------------
* [-] Python 3.x (в третьей версии батарейки)


Backlog:
--------
* [-] Возможность принимать звонки, для бекенда twillio https://www.twilio.com/blog/2014/10/making-and-receiving-phone-calls-with-golang.html
* [-] Добавить сигналы на инвалидацию шаблонов, если был использован массовый апдейт или же delete
* [-] Добавить валидацию к сигналам. Должна быть выбранна либо группа, либо указаны правила
* [-] Добавить возможность повторять отправку письма через некоторое время. Типа галочки repeat
* [-] Добавить возможность шифрования данных при отправке конфеденциальной информации
* [-] Запретить удаление в инлайнах в логах писем
* [-] Добавить возможность отписки на основе категорий. Когда пользователь может отписаться от конкретной категории или писем в данной категории.
* [-] Добавить криптографию + таблицу с публичным ключами пользователей
* [-] Центр для массовых рассылок

* [-] Подсказки по полям
* [-] Графики по логам (фильтры по типам: mail/sms/tts/push)
* [-] Английская версия статьи на хабре для reddit.com
* [-] Антиспам фильтр
* [-] Деплой конфигурация, с uwsgi, mariadb и со всякими оптимизациями (на Ansible)
* [-] Документация с лушими практиками по использованию батарейки
* [-] Полноценная обертка для boxcar, для работы с девайсами iOS/Android/Windows

* [-] Интеграция с django-blockedemails на основе http://www.block-disposable-email.com/
* [-] Интеграция с django-email-analytics для  Google Analytics
* [-] Интеграция с django-email-extras или django-emailpgp или django-gnupg-mails, для подддержки PGP шифрования
* [-] Прозрачная интеграция с django-email-login или :django-email-login-fc или django_email_auth или django-dual-authentication, для автоматической авторизации пользователя
* [-] django-emailmgr - An email manager for Django user
* [-] django-emailsys - Provide the ability to send emails/sms using WebServices
* [-] django-inbound-email - для обратной интеграции (A Django app for receiving inbound emails)
